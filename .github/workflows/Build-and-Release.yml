name: Build and Release

on:
  push:
    branches: ["main"]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Dependencies
        run: bun install

      - name: Build Binary
        run: |
          bun build index.js --compile --outfile dost-${{ matrix.os }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dost-${{ matrix.os }}
          path: dost-${{ matrix.os }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./home/runner/work/dost/dost/artifacts/*
          asset_name: ${{ matrix.os }}-dost${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          asset_content_type: application/octet-stream
